name: CI/CD Docker


on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main


jobs: 
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # CI
      # 코드 저장소로부터 CI 서버로 코드 pull 
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 환경변수 관련 
      - name: make application-*.yml
        run: |
          cd ./src/main/resources
          touch ./application-database.yml ./application-site.yml ./application-oauth.yml ./application-jwt.yml
          echo "${{ secrets.DATABASE_YML }}" > ./application-database.yml
          echo "${{ secrets.SITE_YML }}" > ./application-site.yml
          echo "${{ secrets.OAUTH_YML }}" > ./application-oauth.yml
          echo "${{ secrets.JWT_YML }}" > ./application-jwt.yml
        shell: bash

      # gradle 빌드를 위한 권한 부여
      - name: Grant Execute Permission For Gradlew
        run: |
          chmod +x gradlew
      
      # profile 설정 및 빌드 
      - name: gradle build
        run: |
          ./gradlew clean build

      # CD
      # docker build & push
      - name: Docker Build And Push 
      #  if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/soptermwokat:latest .   
          docker tag ${{ secrets.DOCKER_REPO }}/soptermwokat ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      # docker image 가져와 배포  
      - name: Deploy
        uses: appleboy/ssh-action@master
        id: deploy-prod
      #  if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PEMKEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo docker stop $(sudo docker ps -q)
            sudo docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker run -v /home/ubuntu:/var/log -d -p 8080:8080 --name ${{ secrets.DOCKER_REPO }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker rmi -f $(docker images -f "dangling=true" -q)

      ## time
  current-time:
    needs: CI-CD
  #  if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash